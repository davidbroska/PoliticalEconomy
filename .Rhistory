pull(value)
return(income_share)
}
tidy_worldbank_data <- function(.dataframe){
df <- .dataframe %>%
rename_all(~ str_replace(., ' ', '_') %>% str_remove('[0-9]{4}_\\[YR') %>% str_remove('\\]$')) %>%
mutate(Country_Name = Country_Name %>% str_remove("(n )?(, )?(Arab )?Rep.(blic)?") %>% str_remove("United Arab ")) %>%
select(Country_Name, Country_Code, Series_Name, matches('[0-9]{4}')) %>%
na_if('..') %>%
mutate_at(vars(matches('[0-9]{4}')), as.numeric) %>%
gather(Year, value, - Country_Name, - Country_Code, - Series_Name) %>%
mutate(Year = paste(Year, "-01-01") %>% lubridate::ymd())
return(df)
}
plot_worldbank_data <- function(.dataframe, .outcomes_df){
# get names of countries except for those that descended to civil war
country_names <- .outcomes_df %>% filter(Overall_Consequences != "Civil War") %>% pull(Country_Name)
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = country_names,
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("IsleofDogs2")[3],
wes_palette("IsleofDogs1")[1],
wes_palette("Cavalcanti1")[4],
wes_palette("FantasticFox1")[2], # snake yellow
wes_palette("Moonrise3")[c(2,4)], # douce pink, douce olive
wes_palette("GrandBudapest1")[2], # magenta
wes_palette("FantasticFox1")[5] # dark red
)[1:length(country_names)]
)
# rename last column to value column if it does not exist
if(!"value" %in% names(.dataframe)){
.dataframe <- .dataframe %>% rename_at(ncol(.dataframe), ~paste("value"))
}
# prepare dataframe to plot
# join details countries that correspond to the countries in manually collected data
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(country_names, collapse = "|")),
!is.na(value)
) %>%
left_join(.outcomes_df %>%
select(-Country_Name) %>%
mutate(Overall_Consequences = Overall_Consequences %>% str_replace(" ", "\n")),
by = "Country_Code")
# define x and y coordinates of plot according to the time of the event
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation$value, na.rm = T),
ymax = max(more1_observation$value, na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
ylab(unique(.dataframe$Series_Name)),
labs(color = "Country", shape = "Outcome"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes(x = Year, y = value,
color = Country_Name,
shape = Overall_Consequences)) +
geom_point(size = 1.5) +
geom_line() +
aesthetic_layers
return(plot)
}
outcomes_df <- readRDS('../Data/gsheet_outcomes_2018-12-31.rds') %>%
filter(!is.na(Overall_Consequences))
# wikipedia data on major events of the Arab Spring
timeline <- readRDS("../Data/wiki_fr_timeline2018-11-08.rds") %>%
rename(Date = X1, Event = X2) %>%
mutate(Date = lubridate::dmy(Date, locale = "fr_FR"),
Event = Event %>% str_remove('DÃ©but d[ue] (l[ae])?'))
# load world bank data
wb_data <- list.dirs(path = "../Data/WorldBankData", full.names = T) %>%
list.files(full.names = T, pattern = "Data.csv") %>%
map_df(~ read_csv(.) %>% tidy_worldbank_data())
percent_calculated <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
distinct(Series_Name) %>%
pull() %>% str_extract("held by.+") %>% str_extract("[0-9]+") %>% as.numeric() %>% sum()
income_lower_80 <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
group_by(Year, Country_Name, Country_Code) %>%
summarise(value = sum(value))  %>%
mutate(Series_Name = paste0("Aggregated income share of lower ", percent_calculated, "%"))
income_lower_80 %>%
plot_worldbank_data(outcomes_df)
get_value(wb_data, 2010, "Egypt", "Share of youth not in education, employment or training")
get_value(wb_data, 2010, "Egypt", "Share of youth not in education, employment or training")
# returns a single numeric value from the world bank dataframe
get_value <- function(.df, .Year, .Country_Name, .Series_Name){
income_share <- .df %>%
filter(str_detect(Series_Name, .Series_Name),
Country_Name == .Country_Name,
year(Year) == .Year) %>%
pull(value) %>%
round(1)
return(income_share)
}
tidy_worldbank_data <- function(.dataframe){
df <- .dataframe %>%
rename_all(~ str_replace(., ' ', '_') %>% str_remove('[0-9]{4}_\\[YR') %>% str_remove('\\]$')) %>%
mutate(Country_Name = Country_Name %>% str_remove("(n )?(, )?(Arab )?Rep.(blic)?") %>% str_remove("United Arab ")) %>%
select(Country_Name, Country_Code, Series_Name, matches('[0-9]{4}')) %>%
na_if('..') %>%
mutate_at(vars(matches('[0-9]{4}')), as.numeric) %>%
gather(Year, value, - Country_Name, - Country_Code, - Series_Name) %>%
mutate(Year = paste(Year, "-01-01") %>% lubridate::ymd())
return(df)
}
plot_worldbank_data <- function(.dataframe, .outcomes_df){
# get names of countries except for those that descended to civil war
country_names <- .outcomes_df %>% filter(Overall_Consequences != "Civil War") %>% pull(Country_Name)
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = country_names,
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("IsleofDogs2")[3],
wes_palette("IsleofDogs1")[1],
wes_palette("Cavalcanti1")[4],
wes_palette("FantasticFox1")[2], # snake yellow
wes_palette("Moonrise3")[c(2,4)], # douce pink, douce olive
wes_palette("GrandBudapest1")[2], # magenta
wes_palette("FantasticFox1")[5] # dark red
)[1:length(country_names)]
)
# rename last column to value column if it does not exist
if(!"value" %in% names(.dataframe)){
.dataframe <- .dataframe %>% rename_at(ncol(.dataframe), ~paste("value"))
}
# prepare dataframe to plot
# join details countries that correspond to the countries in manually collected data
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(country_names, collapse = "|")),
!is.na(value)
) %>%
left_join(.outcomes_df %>%
select(-Country_Name) %>%
mutate(Overall_Consequences = Overall_Consequences %>% str_replace(" ", "\n")),
by = "Country_Code")
# define x and y coordinates of plot according to the time of the event
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation$value, na.rm = T),
ymax = max(more1_observation$value, na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
ylab(unique(.dataframe$Series_Name)),
labs(color = "Country", shape = "Outcome"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes(x = Year, y = value,
color = Country_Name,
shape = Overall_Consequences)) +
geom_point(size = 1.5) +
geom_line() +
aesthetic_layers
return(plot)
}
get_value(income_lower_80, 2012, "Egypt", "lower 80")
get_value(income_lower_80, 2010, "Egypt", "lower 80%")
get_value(income_lower_80, 2012, "Egypt", "lower 80%")
View(get_value)
# googlesheets::gs_ls()
googlesheets::gs_auth()
outcomes_df <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys") %>%
googlesheets::gs_read() %>%
filter(!is.na(Overall_Consequences))
# save file
# saveRDS(outcomes_df, paste0("../Data/gsheet_outcomes_", Sys.Date(), ".rds"))
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
# install.packages("tidyverse")
# install.packages("rvest")
# install.packages("lubridate")
# install.packages("wesanderson")
library(tidyverse); library(lubridate); library(wesanderson)
# returns a single numeric value from the world bank dataframe
get_value <- function(.df, .Year, .Country_Name, .Series_Name){
income_share <- .df %>%
filter(str_detect(Series_Name, .Series_Name),
Country_Name == .Country_Name,
year(Year) == .Year) %>%
pull(value) %>%
round(1)
return(income_share)
}
tidy_worldbank_data <- function(.dataframe){
df <- .dataframe %>%
rename_all(~ str_replace(., ' ', '_') %>% str_remove('[0-9]{4}_\\[YR') %>% str_remove('\\]$')) %>%
mutate(Country_Name = Country_Name %>% str_remove("(n )?(, )?(Arab )?Rep.(blic)?") %>% str_remove("United Arab ")) %>%
select(Country_Name, Country_Code, Series_Name, matches('[0-9]{4}')) %>%
na_if('..') %>%
mutate_at(vars(matches('[0-9]{4}')), as.numeric) %>%
gather(Year, value, - Country_Name, - Country_Code, - Series_Name) %>%
mutate(Year = paste(Year, "-01-01") %>% lubridate::ymd())
return(df)
}
plot_worldbank_data <- function(.dataframe, .outcomes_df){
# get names of countries except for those that descended to civil war
country_names <- .outcomes_df %>% filter(Overall_Consequences != "Civil War") %>% pull(Country_Name)
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = country_names,
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("IsleofDogs2")[3],
wes_palette("IsleofDogs1")[1],
wes_palette("Cavalcanti1")[4],
wes_palette("FantasticFox1")[2], # snake yellow
wes_palette("Moonrise3")[c(2,4)], # douce pink, douce olive
wes_palette("GrandBudapest1")[2], # magenta
wes_palette("FantasticFox1")[5] # dark red
)[1:length(country_names)]
)
# rename last column to value column if it does not exist
if(!"value" %in% names(.dataframe)){
.dataframe <- .dataframe %>% rename_at(ncol(.dataframe), ~paste("value"))
}
# prepare dataframe to plot
# join details countries that correspond to the countries in manually collected data
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(country_names, collapse = "|")),
!is.na(value)
) %>%
left_join(.outcomes_df %>%
select(-Country_Name) %>%
mutate(Overall_Consequences = Overall_Consequences %>% str_replace(" ", "\n")),
by = "Country_Code")
# define x and y coordinates of plot according to the time of the event
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation$value, na.rm = T),
ymax = max(more1_observation$value, na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
ylab(unique(.dataframe$Series_Name)),
labs(color = "Country", shape = "Outcome"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes(x = Year, y = value,
color = Country_Name,
shape = Overall_Consequences)) +
geom_point(size = 1.5) +
geom_line() +
aesthetic_layers
return(plot)
}
percent_calculated <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
distinct(Series_Name) %>%
pull() %>% str_extract("held by.+") %>% str_extract("[0-9]+") %>% as.numeric() %>% sum()
income_lower_80 <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
group_by(Year, Country_Name, Country_Code) %>%
summarise(value = sum(value))  %>%
mutate(Series_Name = paste0("Aggregated income share of lower ", percent_calculated, "%"))
income_lower_80 %>%
plot_worldbank_data(outcomes_df)
details_gdp_capita <- read_csv("../Data/WorldBankData/GDP_per_capita/Definition and Source.csv")
wb_data %>%
filter(Series_Name=="GDP per capita (current US$)") %>%
plot_worldbank_data(outcomes_df)
# googlesheets::gs_ls()
googlesheets::gs_auth()
outcomes_df <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys") %>%
googlesheets::gs_read() %>%
filter(!is.na(Overall_Consequences))
# save file
# saveRDS(outcomes_df, paste0("../Data/gsheet_outcomes_", Sys.Date(), ".rds"))
# save file
saveRDS(outcomes_df, paste0("../Data/gsheet_outcomes_", Sys.Date(), ".rds"))
outcomes_df <- readRDS('../Data/gsheet_outcomes_2018-01-02.rds') %>%
filter(!is.na(Overall_Consequences))
outcomes_df <- readRDS('../Data/gsheet_outcomes_2019-01-02.rds') %>%
filter(!is.na(Overall_Consequences))
details_gdp_capita <- read_csv("../Data/WorldBankData/GDP_per_capita/Definition and Source.csv")
wb_data %>%
filter(Series_Name=="GDP per capita (current US$)") %>%
plot_worldbank_data(outcomes_df)
percent_calculated <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
distinct(Series_Name) %>%
pull() %>% str_extract("held by.+") %>% str_extract("[0-9]+") %>% as.numeric() %>% sum()
income_lower_80 <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
group_by(Year, Country_Name, Country_Code) %>%
summarise(value = sum(value))  %>%
mutate(Series_Name = paste0("Aggregated income share of lower ", percent_calculated, "%"))
income_lower_80 %>%
plot_worldbank_data(outcomes_df)
details_gdp_capita <- read_csv("../Data/WorldBankData/GDP_per_capita/Definition and Source.csv")
wb_data %>%
filter(Series_Name=="GDP per capita (current US$)") %>%
plot_worldbank_data(outcomes_df)
# googlesheets::gs_ls()
googlesheets::gs_auth()
outcomes_df <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys") %>%
googlesheets::gs_read() %>%
filter(!is.na(Overall_Consequences))
# save file
saveRDS(outcomes_df, paste0("../Data/gsheet_outcomes_", Sys.Date(), ".rds"))
percent_calculated <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
distinct(Series_Name) %>%
pull() %>% str_extract("held by.+") %>% str_extract("[0-9]+") %>% as.numeric() %>% sum()
income_lower_80 <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
group_by(Year, Country_Name, Country_Code) %>%
summarise(value = sum(value))  %>%
mutate(Series_Name = paste0("Aggregated income share of lower ", percent_calculated, "%"))
income_lower_80 %>%
plot_worldbank_data(outcomes_df)
details_gdp_capita <- read_csv("../Data/WorldBankData/GDP_per_capita/Definition and Source.csv")
wb_data %>%
filter(Series_Name=="GDP per capita (current US$)") %>%
plot_worldbank_data(outcomes_df)
# googlesheets::gs_ls()
googlesheets::gs_auth()
outcomes_df <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys") %>%
googlesheets::gs_read() %>%
filter(!is.na(Overall_Consequences))
# save file
saveRDS(outcomes_df, paste0("../Data/gsheet_outcomes_", Sys.Date(), ".rds"))
percent_calculated <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
distinct(Series_Name) %>%
pull() %>% str_extract("held by.+") %>% str_extract("[0-9]+") %>% as.numeric() %>% sum()
income_lower_80 <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
group_by(Year, Country_Name, Country_Code) %>%
summarise(value = sum(value))  %>%
mutate(Series_Name = paste0("Aggregated income share of lower ", percent_calculated, "%"))
income_lower_80 %>%
plot_worldbank_data(outcomes_df)
details_gdp_capita <- read_csv("../Data/WorldBankData/GDP_per_capita/Definition and Source.csv")
wb_data %>%
filter(Series_Name=="GDP per capita (current US$)") %>%
plot_worldbank_data(outcomes_df)
details_ut <- read_csv("../Data/WorldBankData/Unemployment_percent_of_total_labor_force/Definition and Source.csv")
no_change_over_time <- wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)",
!is.na(value)) %>%
group_by(Country_Code) %>%
summarise(sd = sd(value),
mean = mean(value)) %>%
filter(
sd < 0.3
#mean > 0.8
)
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
anti_join(no_change_over_time, by = "Country_Code") %>%
plot_worldbank_data(outcomes_df) +
ylab("Unemployment, total (% of total labor force)")
details_ut <- read_csv("../Data/WorldBankData/Unemployment_percent_of_total_labor_force/Definition and Source.csv")
no_change_over_time <- wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)",
!is.na(value)) %>%
group_by(Country_Code) %>%
summarise(sd = sd(value),
mean = mean(value)) %>%
filter(
sd < 0.3
#mean > 0.8
)
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
anti_join(no_change_over_time, by = "Country_Code") %>%
plot_worldbank_data(outcomes_df) +
ylab("Unemployment, total (% of total labor force)")
details_ut <- read_csv("../Data/WorldBankData/Unemployment_percent_of_total_labor_force/Definition and Source.csv")
no_change_over_time <- wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)",
!is.na(value)) %>%
group_by(Country_Code) %>%
summarise(sd = sd(value),
mean = mean(value)) %>%
filter(
sd < 0.3
#mean > 0.8
)
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
anti_join(no_change_over_time, by = "Country_Code") %>%
plot_worldbank_data(outcomes_df) +
ylab("Unemployment, total (% of total labor force)")
details_ut <- read_csv("../Data/WorldBankData/Unemployment_percent_of_total_labor_force/Definition and Source.csv")
no_change_over_time <- wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)",
!is.na(value)) %>%
group_by(Country_Code) %>%
summarise(sd = sd(value),
mean = mean(value)) %>%
filter(
sd < 0.3
#mean > 0.8
)
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
#anti_join(no_change_over_time, by = "Country_Code") %>%
plot_worldbank_data(outcomes_df) +
ylab("Unemployment, total (% of total labor force)")
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
anti_join(no_change_over_time, by = "Country_Code") %>%
plot_worldbank_data(outcomes_df) +
ylab("Unemployment, total (% of total labor force)")
details_gdp_capita <- read_csv("../Data/WorldBankData/GDP_per_capita/Definition and Source.csv")
wb_data %>%
filter(Series_Name=="GDP per capita (current US$)") %>%
plot_worldbank_data(outcomes_df)
percent_calculated <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
distinct(Series_Name) %>%
pull() %>% str_extract("held by.+") %>% str_extract("[0-9]+") %>% as.numeric() %>% sum()
details_aggr_income_80 <- paste0("Aggregated income share held by lower ", percent_calculated, "%")
income_lower_80 <- wb_data %>%
filter(str_detect(Series_Name, "Income share held by (lowest|second|third|fourth) 20%")) %>%
group_by(Year, Country_Name, Country_Code) %>%
summarise(value = sum(value))  %>%
mutate(Series_Name = paste0("Aggregated income share of lower ", percent_calculated, "%"))
income_lower_80 %>%
plot_worldbank_data(outcomes_df)
# googlesheets::gs_ls()
googlesheets::gs_auth()
# googlesheets::gs_ls()
googlesheets::gs_auth()
outcomes_df <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys") %>%
googlesheets::gs_read() %>%
filter(!is.na(Overall_Consequences))
# save file
saveRDS(outcomes_df, paste0("../Data/gsheet_outcomes_", Sys.Date(), ".rds"))
outcomes_df <- readRDS('../Data/gsheet_outcomes_2019-01-03.rds') %>%
filter(!is.na(Overall_Consequences))
# wikipedia data on major events of the Arab Spring
timeline <- readRDS("../Data/wiki_fr_timeline2018-11-08.rds") %>%
rename(Date = X1, Event = X2) %>%
mutate(Date = lubridate::dmy(Date, locale = "fr_FR"),
Event = Event %>% str_remove('DÃ©but d[ue] (l[ae])?'))
# load world bank data
wb_data <- list.dirs(path = "../Data/WorldBankData", full.names = T) %>%
list.files(full.names = T, pattern = "Data.csv") %>%
map_df(~ read_csv(.) %>% tidy_worldbank_data())
