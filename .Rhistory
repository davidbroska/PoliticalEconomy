colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("Darjeeling1")[3]
)[1:length(countries)]
)
# prepare dataframe to plot
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(arab_countries$countries, collapse = "|")),
!is.na(.dataframe[5]))
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation[5], na.rm = T),
ymax = max(more1_observation[5], na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
labs(color = "Country"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes_string(x = "Year", y = names(.dataframe[3]), color = "Country_Name")) +
geom_point(size = 0.8) +
geom_line() +
aesthetic_layers
return(plot)
}
View(data)
data %>% distinct(Series_Name)
wb_data %>%
filter("Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data() +
ylab("Unemployment (% of total labor force)")
wb_data <- list.dirs(path = "../WorldBankData", full.names = T) %>%
list.files(full.names = T, pattern = "Data.csv") %>%
map_df(~ read_csv(.) %>% tidy_worldbank_data())
wb_data %>%
filter("Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data() +
ylab("Unemployment (% of total labor force)")
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data() +
ylab("Unemployment (% of total labor force)")
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data()
View(data)
.dataframe <- wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)")
.dataframe
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"),
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("Darjeeling1")[3]
)[1:length(countries)]
)
# prepare dataframe to plot
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(arab_countries$countries, collapse = "|")),
!is.na(.dataframe[5]))
View(more1_observation)
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation[5], na.rm = T),
ymax = max(more1_observation[5], na.rm = T)
)
View(plot_coordinates)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
labs(color = "Country"),
theme_minimal()
)
tidy_worldbank_data <- function(.dataframe){
df <- .dataframe %>%
rename_all(~ str_replace(., ' ', '_') %>% str_remove('[0-9]{4}_\\[YR') %>% str_remove('\\]$')) %>%
mutate(Country_Name = Country_Name %>% str_remove("(n )?(, )?(Arab )?Rep.(blic)?")) %>%
select(Country_Name, Country_Code, Series_Name, matches('[0-9]{4}')) %>%
na_if('..') %>%
mutate_at(vars(matches('[0-9]{4}')), as.numeric) %>%
gather(Year, value, - Country_Name, - Country_Code, - Series_Name) %>%
mutate(Year = paste(Year, "-01-01") %>% lubridate::ymd())
return(df)
}
# define x and y coordinates of plot according to the time of the event
plot_worldbank_data <- function(.dataframe){
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"),
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("Darjeeling1")[3]
)[1:length(countries)]
)
# with gather() the last column contains the value
value_col <- ncol(.dataframe)
# prepare dataframe to plot
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(arab_countries$countries, collapse = "|")),
!is.na(.dataframe[value_col]))
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation[value_col], na.rm = T),
ymax = max(more1_observation[value_col], na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
labs(color = "Country"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes_string(x = "Year", y = names(.dataframe[value_col]), color = "Country_Name")) +
geom_point(size = 0.8) +
geom_line() +
aesthetic_layers
return(plot)
}
.dataframe <- wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data()
#ylab("Unemployment (% of total labor force)")
data %>% distinct(Series_Name)
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data()
tidy_worldbank_data <- function(.dataframe){
df <- .dataframe %>%
rename_all(~ str_replace(., ' ', '_') %>% str_remove('[0-9]{4}_\\[YR') %>% str_remove('\\]$')) %>%
mutate(Country_Name = Country_Name %>% str_remove("(n )?(, )?(Arab )?Rep.(blic)?")) %>%
select(Country_Name, Country_Code, Series_Name, matches('[0-9]{4}')) %>%
na_if('..') %>%
mutate_at(vars(matches('[0-9]{4}')), as.numeric) %>%
gather(Year, value, - Country_Name, - Country_Code, - Series_Name) %>%
mutate(Year = paste(Year, "-01-01") %>% lubridate::ymd())
return(df)
}
# define x and y coordinates of plot according to the time of the event
plot_worldbank_data <- function(.dataframe){
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"),
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("Darjeeling1")[3]
)[1:length(countries)]
)
# with gather() the last column contains the value
value_col <- ncol(.dataframe)
# prepare dataframe to plot
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(arab_countries$countries, collapse = "|")),
!is.na(.dataframe[value_col]))
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation[value_col], na.rm = T),
ymax = max(more1_observation[value_col], na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
ylab(unique(.dataframe$Series_Name)),
labs(color = "Country"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes_string(x = "Year", y = names(.dataframe[value_col]), color = "Country_Name")) +
geom_point(size = 0.8) +
geom_line() +
aesthetic_layers
return(plot)
}
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data()
#ylab("Unemployment (% of total labor force)")
data %>% distinct(Series_Name)
unique(.dataframe$Series_Name)
tidy_worldbank_data <- function(.dataframe){
df <- .dataframe %>%
rename_all(~ str_replace(., ' ', '_') %>% str_remove('[0-9]{4}_\\[YR') %>% str_remove('\\]$')) %>%
mutate(Country_Name = Country_Name %>% str_remove("(n )?(, )?(Arab )?Rep.(blic)?")) %>%
select(Country_Name, Country_Code, Series_Name, matches('[0-9]{4}')) %>%
na_if('..') %>%
mutate_at(vars(matches('[0-9]{4}')), as.numeric) %>%
gather(Year, value, - Country_Name, - Country_Code, - Series_Name) %>%
mutate(Year = paste(Year, "-01-01") %>% lubridate::ymd())
return(df)
}
# define x and y coordinates of plot according to the time of the event
plot_worldbank_data <- function(.dataframe){
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"),
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("Darjeeling1")[3]
)[1:length(countries)]
)
# with gather() the last column contains the value
value_col <- ncol(.dataframe)
# prepare dataframe to plot
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(arab_countries$countries, collapse = "|")),
!is.na(.dataframe[value_col]))
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation[value_col], na.rm = T),
ymax = max(more1_observation[value_col], na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
ylab(unique(.dataframe$Series_Name)),
labs(color = "Country"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes_string(x = "Year", y = names(.dataframe[value_col]), color = "Country_Name")) +
geom_point(size = 0.8) +
geom_line() +
aesthetic_layers
return(plot)
}
data %>% distinct(Series_Name)
wb_data %>%
filter(Series_Name == "Taxes on international trade (% of revenue)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Taxes on income, profits and capital gains (% of revenue)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Other taxes (% of revenue)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Share of youth not in education, employment or training, total (% of youth population)") %>%
plot_worldbank_data() +
ylab("Youth unemployment (% of youth population)")
wb_data %>%
filter(Series_Name == "Other taxes (% of revenue)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data() +
ylab("Unemployment, total (% of total labor force)")
data %>% distinct(Series_Name)
data %>% distinct(Series_Name)
wb_data %>%
filter(Series_Name == "Customs and other import duties (% of tax revenue)") %>%
plot_worldbank_data()
knitr::opts_chunk$set(echo = FALSE)
# install.packages("tidyverse")
# install.packages("rvest") # will also install required package xml2
# install.packages("lubridate")
# install.packages("wesanderson")
library(tidyverse); library(lubridate); library(wesanderson)
tidy_worldbank_data <- function(.dataframe){
df <- .dataframe %>%
rename_all(~ str_replace(., ' ', '_') %>% str_remove('[0-9]{4}_\\[YR') %>% str_remove('\\]$')) %>%
mutate(Country_Name = Country_Name %>% str_remove("(n )?(, )?(Arab )?Rep.(blic)?")) %>%
select(Country_Name, Country_Code, Series_Name, matches('[0-9]{4}')) %>%
na_if('..') %>%
mutate_at(vars(matches('[0-9]{4}')), as.numeric) %>%
gather(Year, value, - Country_Name, - Country_Code, - Series_Name) %>%
mutate(Year = paste(Year, "-01-01") %>% lubridate::ymd())
return(df)
}
# define x and y coordinates of plot according to the time of the event
plot_worldbank_data <- function(.dataframe){
arab_countries <- data_frame(
# countries mentioned in the context of arab spring
countries = c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"),
# define costum colors for plot and rearrange their order of appearance
colours =  c(wes_palette("Darjeeling1")[c(1,2,4,5)],
wes_palette("Darjeeling2")[1:4],
wes_palette("Darjeeling1")[3]
)[1:length(countries)]
)
# with gather() the last column contains the value
value_col <- ncol(.dataframe)
# prepare dataframe to plot
more1_observation <- .dataframe %>%
filter(str_detect(Country_Name, paste0(arab_countries$countries, collapse = "|")),
!is.na(.dataframe[value_col]))
plot_coordinates <- data_frame(
xmin = min(timeline$Date),
xmax = max(timeline$Date),
ymin = min(more1_observation[value_col], na.rm = T),
ymax = max(more1_observation[value_col], na.rm = T)
)
# indicate area of major events of arab spring in plot
aesthetic_layers <- list(
geom_rect(inherit.aes = F,
data = plot_coordinates,
fill = "red",
alpha = 0.2,
mapping = aes(xmin = xmin, xmax = xmax,
ymin = ymin, ymax = ymax)),
geom_text(inherit.aes = F,
aes(x = xmin + (xmax - xmin) / 2, y = ymin),
label = "Major Events of Arab Spring",
angle = 90, vjust = 0.36, size = 3.1, hjust = -0.5,
data = plot_coordinates,
alpha = 0.7),
scale_x_date(limits = c(min(more1_observation$Year),
max(more1_observation$Year)),
labels = scales::date_format("%Y"),
breaks = '2 years'),
scale_colour_manual(values = setNames(as.character(arab_countries$colours),
arab_countries$countries)),
xlab("Year"),
ylab(unique(.dataframe$Series_Name)),
labs(color = "Country"),
theme_minimal()
)
plot <- ggplot(more1_observation,
aes_string(x = "Year", y = names(.dataframe[value_col]), color = "Country_Name")) +
geom_point(size = 0.95) +
geom_line() +
aesthetic_layers
return(plot)
}
# wikipedia data on major events of the Arab Spring
timeline <- readRDS("../wiki_fr_timeline2018-11-08.rds") %>%
rename(Date = X1, Event = X2) %>%
mutate(Date = lubridate::dmy(Date, locale = "fr_FR"),
Event = Event %>% str_remove('Début d[ue] (l[ae])?'))
# load world bank data
wb_data <- list.dirs(path = "../WorldBankData", full.names = T) %>%
list.files(full.names = T, pattern = "Data.csv") %>%
map_df(~ read_csv(.) %>% tidy_worldbank_data())
timeline
wb_data %>%
filter(Series_Name == "GINI index (World Bank estimate)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Unemployment, total (% of total labor force) (modeled ILO estimate)") %>%
plot_worldbank_data() +
ylab("Unemployment, total (% of total labor force)")
wb_data %>%
filter(Series_Name == "Share of youth not in education, employment or training, total (% of youth population)") %>%
plot_worldbank_data() +
ylab("Youth unemployment (% of youth population)")
wb_data %>%
filter(Series_Name == "Other taxes (% of revenue)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Taxes on income, profits and capital gains (% of revenue)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Customs and other import duties (% of tax revenue)") %>%
plot_worldbank_data()
wb_data %>%
filter(Series_Name == "Taxes on international trade (% of revenue)") %>%
plot_worldbank_data()
read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue") %>% pull()
read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue/Definition and Source.csv") %>% pull()
read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue/Definition and Source.csv") %>% pull(var = 2)
read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue/Definition and Source.csv") %>% pull(var = 1)
read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue/Definition and Source.csv") %>% pull(var = 2)
read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue/Definition and Source.csv") %>% pull(var = 3)
read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue/Definition and Source.csv") %>% pull(var = 3)
details_toit <- read_csv("../WorldBankData/Taxes_on_international_trade_percent_of_revenue/Definition and Source.csv") %>% pull(3)
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
# install.packages("tidyverse")
# install.packages("rvest") # will also install required package xml2
# install.packages("lubridate")
# install.packages("wesanderson")
library(tidyverse); library(lubridate); library(wesanderson)
details_ye <- read_csv("../WorldBankData/Youth_unemployment_percent_youth_population/Definition and Source.csv") %>% pull(3)
details_gi <- read_csv("../WorldBankData/world_bank_gini/Definition and Source.csv") %>% pull(2)
details_toipacg %>% pull(3)
names(wb_data)
View(wb_data)
paste0(c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"), collapse = "/n")
paste0(c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"), collapse = "")
paste0(c("Egypt", "Tunisia", "Jordan", "Yemen", "Bahrain", "Libya", "Syria", "Morocco"), collapse = " ")
View(wb_data)
install.packages("googlesheets")
googlesheets::gs_auth(new_user = TRUE)
#googlesheets::gs_auth(new_user = TRUE)
googlesheets::gs_ls()
#googlesheets::gs_auth(new_user = TRUE)
googlesheets::gs_ls() %>% select(sheet_title, sheet_key)
googlesheets::gs_ls()
#googlesheets::gs_auth(new_user = TRUE)
googlesheets::gs_ls() %>% select(author, sheet_title, sheet_key)
#googlesheets::gs_auth(new_user = TRUE)
googlesheets::gs_ls() %>% select(author, sheet_title, sheet_key) -> sheet
View(sheet)
# googlesheets::gs_auth(new_user = TRUE)
# googlesheets::gs_ls()
gsheet <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys")
View(gsheet)
# googlesheets::gs_auth(new_user = TRUE)
# googlesheets::gs_ls()
gsheet <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys") %>% googlesheets::gs_read()
View(gsheet)
# googlesheets::gs_auth()
# googlesheets::gs_ls()
# gsheet <- googlesheets::gs_key("1HcxeQTFjCeNM5yWhh94XMLUVzj7GaL4F8Hjqwy8tOys") %>% googlesheets::gs_read()
# wikipedia data on major events of the Arab Spring
timeline <- readRDS("../wiki_fr_timeline2018-11-08.rds") %>%
rename(Date = X1, Event = X2) %>%
mutate(Date = lubridate::dmy(Date, locale = "fr_FR"),
Event = Event %>% str_remove('Début d[ue] (l[ae])?'))
# load world bank data
wb_data <- list.dirs(path = "../WorldBankData", full.names = T) %>%
list.files(full.names = T, pattern = "Data.csv") %>%
map_df(~ read_csv(.) %>% tidy_worldbank_data())
